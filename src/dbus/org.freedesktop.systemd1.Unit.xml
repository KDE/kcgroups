<!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN"
"http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
<node>
  <interface name="org.freedesktop.systemd1.Unit">
    <property name="Id" type="s" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="Names" type="as" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="Following" type="s" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="false"/>
    </property>
    <property name="Requires" type="as" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="Requisite" type="as" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="Wants" type="as" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="BindsTo" type="as" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="PartOf" type="as" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="RequiredBy" type="as" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="RequisiteOf" type="as" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="WantedBy" type="as" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="BoundBy" type="as" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="ConsistsOf" type="as" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="Conflicts" type="as" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="ConflictedBy" type="as" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="Before" type="as" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="After" type="as" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="OnFailure" type="as" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="Triggers" type="as" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="TriggeredBy" type="as" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="PropagatesReloadTo" type="as" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="ReloadPropagatedFrom" type="as" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="JoinsNamespaceOf" type="as" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="RequiresMountsFor" type="as" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="Documentation" type="as" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="Description" type="s" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="LoadState" type="s" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="ActiveState" type="s" access="read">
    </property>
    <property name="SubState" type="s" access="read">
    </property>
    <property name="FragmentPath" type="s" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="SourcePath" type="s" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="DropInPaths" type="as" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="UnitFileState" type="s" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="false"/>
    </property>
    <property name="UnitFilePreset" type="s" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="false"/>
    </property>
    <property name="StateChangeTimestamp" type="t" access="read">
    </property>
    <property name="StateChangeTimestampMonotonic" type="t" access="read">
    </property>
    <property name="InactiveExitTimestamp" type="t" access="read">
    </property>
    <property name="InactiveExitTimestampMonotonic" type="t" access="read">
    </property>
    <property name="ActiveEnterTimestamp" type="t" access="read">
    </property>
    <property name="ActiveEnterTimestampMonotonic" type="t" access="read">
    </property>
    <property name="ActiveExitTimestamp" type="t" access="read">
    </property>
    <property name="ActiveExitTimestampMonotonic" type="t" access="read">
    </property>
    <property name="InactiveEnterTimestamp" type="t" access="read">
    </property>
    <property name="InactiveEnterTimestampMonotonic" type="t" access="read">
    </property>
    <property name="CanStart" type="b" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="CanStop" type="b" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="CanReload" type="b" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="CanIsolate" type="b" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="CanClean" type="as" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="StopWhenUnneeded" type="b" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="RefuseManualStart" type="b" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="RefuseManualStop" type="b" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="AllowIsolate" type="b" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="DefaultDependencies" type="b" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="IgnoreOnIsolate" type="b" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="NeedDaemonReload" type="b" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="ConditionResult" type="b" access="read">
    </property>
    <property name="AssertResult" type="b" access="read">
    </property>
    <property name="ConditionTimestamp" type="t" access="read">
    </property>
    <property name="ConditionTimestampMonotonic" type="t" access="read">
    </property>
    <property name="AssertTimestamp" type="t" access="read">
    </property>
    <property name="AssertTimestampMonotonic" type="t" access="read">
    </property>
    <property name="Transient" type="b" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="Perpetual" type="b" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="StartLimitIntervalUSec" type="t" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="StartLimitBurst" type="u" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="StartLimitAction" type="s" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="FailureAction" type="s" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="FailureActionExitStatus" type="i" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="SuccessAction" type="s" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="SuccessActionExitStatus" type="i" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="RebootArgument" type="s" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="InvocationID" type="ay" access="read">
    </property>
    <property name="CollectMode" type="s" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="const"/>
    </property>
    <property name="Refs" type="as" access="read">
      <annotation name="org.freedesktop.DBus.Property.EmitsChangedSignal" value="false"/>
    </property>
    <method name="Start">
      <arg type="s" direction="in"/>
      <arg type="o" direction="out"/>
    </method>
    <method name="Stop">
      <arg type="s" direction="in"/>
      <arg type="o" direction="out"/>
    </method>
    <method name="Reload">
      <arg type="s" direction="in"/>
      <arg type="o" direction="out"/>
    </method>
    <method name="Restart">
      <arg type="s" direction="in"/>
      <arg type="o" direction="out"/>
    </method>
    <method name="TryRestart">
      <arg type="s" direction="in"/>
      <arg type="o" direction="out"/>
    </method>
    <method name="ReloadOrRestart">
      <arg type="s" direction="in"/>
      <arg type="o" direction="out"/>
    </method>
    <method name="ReloadOrTryRestart">
      <arg type="s" direction="in"/>
      <arg type="o" direction="out"/>
    </method>
    <method name="Kill">
      <arg type="s" direction="in"/>
      <arg type="i" direction="in"/>
    </method>
    <method name="ResetFailed">
    </method>
    <method name="SetProperties">
      <annotation name="org.qtproject.QtDBus.QtTypeName.In1" value="QVariantMultiMap"/>
      <arg type="b" direction="in" name="runtime"/>
      <arg type="a(sv)" direction="in" name="properties">
        <annotation name="org.qtproject.QtDBus.QtTypeName.In1" value="QVariantMultiMap"/>
      </arg>
    </method>
    <method name="Ref">
    </method>
    <method name="Unref">
    </method>
    <method name="Clean">
      <arg type="as" direction="in"/>
    </method>
  </interface>
</node>
